version: 2
jobs:
  build:
    docker:
      - image: golang:1.10-alpine
    working_directory: /go/src/github.com/danackerson/digitalocean
    steps:
      - checkout
      - add-ssh-keys:
          fingerprints:
            - "93:c4:61:21:a6:82:d8:6d:4f:73:11:79:37:23:83:07"
      - run:
          name: Start ssh-agent
          command: |
            apk add -U jq curl openssh-client git bash
            ssh-agent -s > ~/.ssh_agent_conf
            source ~/.ssh_agent_conf
            for _k in $(ls ${HOME}/.ssh/id_*); do
              ssh-add ${_k} || true
            done

      - deploy:
          name: Setup new server at Digital Ocean
          command: |
            go get -t -d -v ./...
            ./set_env.sh
            go run do.go -fn=createNewServer
            source /tmp/new_digital_ocean_droplet_params

            if [[ "$NEW_SERVER_IPV4" ]]; then
              if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
                go run do.go -fn=updateDNS -dropletID=$NEW_DROPLET_ID
              fi

              export TRAEFIK_DIR="/home/$deployUser/traefik"
              export DEPLOY_CONNECT="ssh -o StrictHostKeyChecking=no $deployUser@$NEW_SERVER_IPV4"

              curl -fsS https://raw.githubusercontent.com/danackerson/digitalocean/master/utils/disableFW.sh | bash

              $DEPLOY_CONNECT mkdir -p $TRAEFIK_DIR/logs
              $DEPLOY_CONNECT touch $TRAEFIK_DIR/acme.json
              $DEPLOY_CONNECT chmod 600 $TRAEFIK_DIR/acme.json
              scp -o StrictHostKeyChecking=no $PWD/traefik.toml $deployUser@$NEW_SERVER_IPV4:$TRAEFIK_DIR/

              $DEPLOY_CONNECT docker network create web || true
              $DEPLOY_CONNECT docker rm -f traefik || true
              $DEPLOY_CONNECT docker run -d --restart=always --network='web' \
                --label='traefik.frontend.rule=Host:monitor.ackerson.de' \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v $TRAEFIK_DIR/traefik.toml:/traefik.toml \
                -v $TRAEFIK_DIR/logs:/tmp \
                -v $TRAEFIK_DIR/acme.json:/acme.json \
                -e DO_AUTH_TOKEN=$digitalOceanToken \
                -p 80:80 -p 443:443 \
                --name traefik traefik:1.6

              $DEPLOY_CONNECT docker run -d  --restart=always --name dd-agent \
                -v /var/run/docker.sock:/var/run/docker.sock:ro \
                -v /proc/:/host/proc/:ro \
                -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro \
                -e DD_API_KEY=$DataDog_API_KEY datadog/agent:latest

              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[DEPLOY_SERVER_IP]=$NEW_SERVER_IPV4 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/ackerson.de-go/tree/master

              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[DEPLOY_SERVER_IP]=$NEW_SERVER_IPV4 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/battlefleet/tree/master

              curl --user ${CIRCLE_API_TOKEN}: \
                --data build_parameters[DEPLOY_SERVER_IP]=$NEW_SERVER_IPV4 \
                https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/bender-slackbot/tree/master
            fi

      - run:
          name: Reenable Digital Ocean firewall
          command: |
             curl -fsS https://raw.githubusercontent.com/danackerson/digitalocean/master/utils/reenableFW.sh | bash
          when: always
